package TryFX;

import java.io.IOException;
import java.net.URL;
import java.util.ResourceBundle;
import javafx.fxml.Initializable;
import javafx.collections.ObservableList;
import javafx.fxml.FXML;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import java.sql.*;
import javafx.event.ActionEvent;
import javafx.fxml.FXMLLoader;
import javafx.scene.Node;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.TextField;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.input.MouseEvent;
import javafx.scene.text.Text;
import javafx.stage.Stage;
import javax.swing.JOptionPane;

//for update module
public class DeleteController implements Initializable {

    @FXML
    private TableColumn<employees, String> col_name;

    @FXML
    private TableColumn<employees, Integer> col_id;

    @FXML
    private TableColumn<employees, Double> col_salary;

    @FXML
    private TableView<employees> table_emp;

    @FXML
    private Text txt_name;

    @FXML
    private Text txt_id;
    
    @FXML
    private Text txt_salary;

    ObservableList<employees> listM;

    int index = -1;
    Connection conn = null;
    ResultSet rs = null;
    PreparedStatement pst = null;

    @FXML
    void getSelected(MouseEvent event) {
        index = table_emp.getSelectionModel().getSelectedIndex();
        if (index <= -1) {

            return;
        }

        txt_name.setText(col_name.getCellData(index).toString());
        txt_id.setText(col_id.getCellData(index).toString());
        txt_salary.setText(col_salary.getCellData(index).toString());
    }

    public void delete() {
        conn = sqlConnect.connectDb();
        String sql = "delete from users where id = ?";
        
        try {
            String value2 = txt_id.getText();

            pst.setInt(1,Integer.parseInt(value2));
            pst = conn.prepareStatement(sql);
            pst.execute();

            JOptionPane.showMessageDialog(null, "Delete Successfully");
            refreshTable();
            
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    public void refreshTable() {

        col_name.setCellValueFactory(new PropertyValueFactory<employees, String>("name"));
        col_id.setCellValueFactory(new PropertyValueFactory<employees, Integer>("id"));
        col_salary.setCellValueFactory(new PropertyValueFactory<employees, Double>("salary"));

        listM = sqlConnect.getEmp();
        table_emp.setItems(listM);
    }

    @Override
    public void initialize(URL url, ResourceBundle rb) {
        refreshTable();

    }

    private Stage stage;
    private Scene scene;
    private Parent root;

    public void switchToHome(ActionEvent event) throws IOException {
        root = FXMLLoader.load(getClass().getResource("home.fxml"));
        stage = (Stage) ((Node) event.getSource()).getScene().getWindow();
        scene = new Scene(root);
        stage.setScene(scene);
        stage.show();
    }

    public void switchToAdd(ActionEvent event) throws IOException {
        root = FXMLLoader.load(getClass().getResource("addEmp.fxml"));
        stage = (Stage) ((Node) event.getSource()).getScene().getWindow();
        scene = new Scene(root);
        stage.setScene(scene);
        stage.show();
    }

    public void switchToUpdate(ActionEvent event) throws IOException {
        root = FXMLLoader.load(getClass().getResource("updateEmp.fxml"));
        stage = (Stage) ((Node) event.getSource()).getScene().getWindow();
        scene = new Scene(root);
        stage.setScene(scene);
        JOptionPane.showMessageDialog(null, "Connection Successful");
        stage.show();
    }

    

    public void switchToDelete(ActionEvent event) throws IOException {
        root = FXMLLoader.load(getClass().getResource("delete.fxml"));
        stage = (Stage)((Node)event.getSource()).getScene().getWindow();
        scene = new Scene(root);
        stage.setScene(scene);
        JOptionPane.showMessageDialog(null, "Connection Successful");
        stage.show();
    }
    
     
    public void switchToSearch(ActionEvent event) throws IOException {
        root = FXMLLoader.load(getClass().getResource("search.fxml"));
        stage = (Stage) ((Node) event.getSource()).getScene().getWindow();
        scene = new Scene(root);
        stage.setScene(scene);
        stage.show();
    }

}
